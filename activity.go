package unmarshalresponse

import (
	"encoding/json"
	"fmt"
	"github.com/TIBCOSoftware/flogo-lib/core/activity"
	"github.com/TIBCOSoftware/flogo-lib/logger"
)

// ActivityLog is the default logger for the Log Activity
var activityLog = logger.GetLogger("activity-flogo-unmarshalresponse")

// MyActivity is a stub for your Activity implementation
type XMLParserActivity struct {
	metadata *activity.Metadata
}

// NewActivity creates a new activity
func NewActivity(metadata *activity.Metadata) activity.Activity {
	return &XMLParserActivity{metadata: metadata}
}

// Metadata implements activity.Activity.Metadata
func (a *XMLParserActivity) Metadata() *activity.Metadata {
	return a.metadata
}

//XSD
type AutoGenerated struct {
	Data struct {
		AccessType                         string `json:"accessType"`
		AckReceivedHighMsgID               int    `json:"ackReceivedHighMsgId"`
		AckReceivedLowMsgID                int    `json:"ackReceivedLowMsgId"`
		BindCountPercentHighClearThreshold int    `json:"bindCountPercentHighClearThreshold"`
		BindCountPercentHighThreshold      int    `json:"bindCountPercentHighThreshold"`
		BindTimeForwardingMode             string `json:"bindTimeForwardingMode"`
		ConsumerAckPropagationEnabled      bool   `json:"consumerAckPropagationEnabled"`
		Counter                            struct {
			AckPendingMsgCount                            int `json:"ackPendingMsgCount"`
			AckPropagationReceivedMsgCount                int `json:"ackPropagationReceivedMsgCount"`
			AckPropagationSentMsgCount                    int `json:"ackPropagationSentMsgCount"`
			AlreadyBoundBindFailureCount                  int `json:"alreadyBoundBindFailureCount"`
			BindCount                                     int `json:"bindCount"`
			BindRequestCount                              int `json:"bindRequestCount"`
			BindResponseCount                             int `json:"bindResponseCount"`
			BindSuccessCount                              int `json:"bindSuccessCount"`
			ClientProfileDeniedDiscardedMsgCount          int `json:"clientProfileDeniedDiscardedMsgCount"`
			CurrentSpooledMsgCount                        int `json:"currentSpooledMsgCount"`
			DeletedDiscardedMsgCount                      int `json:"deletedDiscardedMsgCount"`
			DeliveredUnackedMsgCount                      int `json:"deliveredUnackedMsgCount"`
			DestinationGroupErrorDiscardedMsgCount        int `json:"destinationGroupErrorDiscardedMsgCount"`
			DisabledBindFailureCount                      int `json:"disabledBindFailureCount"`
			InvalidSelectorBindFailureCount               int `json:"invalidSelectorBindFailureCount"`
			LowPriorityMsgCongestionDiscardedMsgCount     int `json:"lowPriorityMsgCongestionDiscardedMsgCount"`
			MaxBindCountExceededBindFailureCount          int `json:"maxBindCountExceededBindFailureCount"`
			MaxMsgSizeExceededDiscardedMsgCount           int `json:"maxMsgSizeExceededDiscardedMsgCount"`
			MaxMsgSpoolUsageExceededDiscardedMsgCount     int `json:"maxMsgSpoolUsageExceededDiscardedMsgCount"`
			MaxRedeliveryCountExceededDiscardedMsgCount   int `json:"maxRedeliveryCountExceededDiscardedMsgCount"`
			MaxRedeliveryCountExceededToDmqFailedMsgCount int `json:"maxRedeliveryCountExceededToDmqFailedMsgCount"`
			MaxRedeliveryCountExceededToDmqMsgCount       int `json:"maxRedeliveryCountExceededToDmqMsgCount"`
			MaxTTLExceededDiscardedMsgCount               int `json:"maxTtlExceededDiscardedMsgCount"`
			MaxTTLExpiredDiscardedMsgCount                int `json:"maxTtlExpiredDiscardedMsgCount"`
			MaxTTLExpiredToDmqFailedMsgCount              int `json:"maxTtlExpiredToDmqFailedMsgCount"`
			MaxTTLExpiredToDmqMsgCount                    int `json:"maxTtlExpiredToDmqMsgCount"`
			MsgSpoolDisabledDiscardedMsgCount             int `json:"msgSpoolDisabledDiscardedMsgCount"`
			NoLocalDeliveryDiscardedMsgCount              int `json:"noLocalDeliveryDiscardedMsgCount"`
			OtherBindFailureCount                         int `json:"otherBindFailureCount"`
			RedeliveredMsgCount                           int `json:"redeliveredMsgCount"`
			ReplicationAckedViaAckPropagationMsgCount     int `json:"replicationAckedViaAckPropagationMsgCount"`
			ReplicationReceivedMsgCount                   int `json:"replicationReceivedMsgCount"`
			SpooledByteCount                              int `json:"spooledByteCount"`
			SpooledMsgCount                               int `json:"spooledMsgCount"`
			TopicSubscriptionCount                        int `json:"topicSubscriptionCount"`
		} `json:"counter"`
		DeadMsgQueue            string `json:"deadMsgQueue"`
		EgressEnabled           bool   `json:"egressEnabled"`
		EventBindCountThreshold struct {
			ClearPercent int `json:"clearPercent"`
			SetPercent   int `json:"setPercent"`
		} `json:"eventBindCountThreshold"`
		EventMsgSpoolUsageThreshold struct {
			ClearPercent int `json:"clearPercent"`
			SetPercent   int `json:"setPercent"`
		} `json:"eventMsgSpoolUsageThreshold"`
		EventRejectLowPriorityMsgLimitThreshold struct {
			ClearPercent int `json:"clearPercent"`
			SetPercent   int `json:"setPercent"`
		} `json:"eventRejectLowPriorityMsgLimitThreshold"`
		HighWaterMark                  float64 `json:"highWaterMark"`
		IngressEnabled                 bool    `json:"ingressEnabled"`
		IsCreatedByManagement          bool    `json:"isCreatedByManagement"`
		IsDurable                      bool    `json:"isDurable"`
		IsEgressSelectorPresent        bool    `json:"isEgressSelectorPresent"`
		LastSpooledMsgID               int     `json:"lastSpooledMsgId"`
		LowPriorityMsgCongestionState  string  `json:"lowPriorityMsgCongestionState"`
		MaxBindCount                   int     `json:"maxBindCount"`
		MaxDeliveredUnackedMsgsPerFlow int     `json:"maxDeliveredUnackedMsgsPerFlow"`
		MaxMsgSize                     int     `json:"maxMsgSize"`
		MaxMsgSpoolUsage               int     `json:"maxMsgSpoolUsage"`
		MaxRedeliveryCount             int     `json:"maxRedeliveryCount"`
		MaxTTL                         int     `json:"maxTtl"`
		MsgSpoolUsage                  int     `json:"msgSpoolUsage"`
		MsgVpnName                     string  `json:"msgVpnName"`
		NetworkTopic                   string  `json:"networkTopic"`
		Owner                          string  `json:"owner"`
		Permission                     string  `json:"permission"`
		QueueName                      string  `json:"queueName"`
		Rate                           struct {
			AverageEgressByteRate  int `json:"averageEgressByteRate"`
			AverageEgressMsgRate   int `json:"averageEgressMsgRate"`
			AverageIngressByteRate int `json:"averageIngressByteRate"`
			AverageIngressMsgRate  int `json:"averageIngressMsgRate"`
			EgressByteRate         int `json:"egressByteRate"`
			EgressMsgRate          int `json:"egressMsgRate"`
			IngressByteRate        int `json:"ingressByteRate"`
			IngressMsgRate         int `json:"ingressMsgRate"`
		} `json:"rate"`
		RejectLowPriorityMsgEnabled        bool   `json:"rejectLowPriorityMsgEnabled"`
		RejectLowPriorityMsgLimit          int    `json:"rejectLowPriorityMsgLimit"`
		RejectMsgToSenderOnDiscardBehavior string `json:"rejectMsgToSenderOnDiscardBehavior"`
		RespectMsgPriorityEnabled          bool   `json:"respectMsgPriorityEnabled"`
		RespectTTLEnabled                  bool   `json:"respectTtlEnabled"`
		VirtualRouter                      string `json:"virtualRouter"`
	} `json:"data"`
	Links struct {
		EgressFlowsURI   string `json:"egressFlowsUri"`
		MessagesURI      string `json:"messagesUri"`
		PrioritiesURI    string `json:"prioritiesUri"`
		SubscriptionsURI string `json:"subscriptionsUri"`
		URI              string `json:"uri"`
	} `json:"links"`
	Meta struct {
		Request struct {
			Method string `json:"method"`
			URI    string `json:"uri"`
		} `json:"request"`
		ResponseCode int `json:"responseCode"`
	} `json:"meta"`
}

// end of XSD

// Eval implements activity.Activity.Eval
func (a *XMLParserActivity) Eval(ctx activity.Context) (done bool, err error) {

	JsonString := ctx.GetInput("jsonString").(string)

	activityLog.Debugf("Json String is : [%s]", JsonString)
	//fmt.Println("Json String is : ", JsonString)

	if len(JsonString) == 0 {
		activityLog.Debugf("value in the field is empty ")
		//fmt.Println("value in  the field is empty ")

	}
	//	JsonString = (string(JsonString))

	json_data := AutoGenerated{}
	err = json.Unmarshal([]byte(JsonString), &json_data)

	//jsondata, _ := json.Unmarshal(json_data)
	if err != nil {
		activityLog.Debugf("Error ", err)
		fmt.Println("error: ", err)
		return
	}

	//fmt.Println(" JSON String ")
	//fmt.Println(string(jsondata))

	// Set the output as part of the context
	activityLog.Debugf("Activity has unmarshalled json Successfully")
	fmt.Println("Activity has unmarshalled json Successfull")

	ctx.SetOutput("bindcount", json_data.Data.Counter.BindCount)
	ctx.SetOutput("avginmsgrate", json_data.Data.Rate.AverageIngressMsgRate)

	return true, nil
}
