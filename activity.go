package unmarshaljson

import (
	"encoding/json"
	"fmt"
	"log"
	"github.com/TIBCOSoftware/flogo-lib/core/activity"
	"github.com/TIBCOSoftware/flogo-lib/logger"
)

// ActivityLog is the default logger for the Log Activity
var activityLog = logger.GetLogger("activity-flogo-unmarshaljson")

// MyActivity is a stub for your Activity implementation
type unmarshaljson struct {
	metadata *activity.Metadata
}

// NewActivity creates a new activity
func NewActivity(metadata *activity.Metadata) activity.Activity {
	return &unmarshaljson{metadata: metadata}
}

// Metadata implements activity.Activity.Metadata
func (a *unmarshaljson) Metadata() *activity.Metadata {
	return a.metadata
}

//XSD
type AutoGenerated struct {
	Data struct {
		AccessType                    string `json:"accessType"`
		ConsumerAckPropagationEnabled bool   `json:"consumerAckPropagationEnabled"`
		DeadMsgQueue                  string `json:"deadMsgQueue"`
		EgressEnabled                 bool   `json:"egressEnabled"`
		EventBindCountThreshold       struct {
			ClearPercent int `json:"clearPercent"`
			SetPercent   int `json:"setPercent"`
		} `json:"eventBindCountThreshold"`
		EventMsgSpoolUsageThreshold struct {
			ClearPercent int `json:"clearPercent"`
			SetPercent   int `json:"setPercent"`
		} `json:"eventMsgSpoolUsageThreshold"`
		EventRejectLowPriorityMsgLimitThreshold struct {
			ClearPercent int `json:"clearPercent"`
			SetPercent   int `json:"setPercent"`
		} `json:"eventRejectLowPriorityMsgLimitThreshold"`
		IngressEnabled                             bool    `json:"ingressEnabled"`
		MaxBindCount                               int     `json:"maxBindCount"`
		MaxDeliveredUnackedMsgsPerFlow             int     `json:"maxDeliveredUnackedMsgsPerFlow"`
		MaxMsgSize                                 int     `json:"maxMsgSize"`
		MaxMsgSpoolUsage                           int     `json:"maxMsgSpoolUsage"`
		MaxRedeliveryCount                         int     `json:"maxRedeliveryCount"`
		MaxTTL                                     int     `json:"maxTtl"`
		MsgVpnName                                 string  `json:"msgVpnName"`
		Owner                                      string  `json:"owner"`
		Permission                                 string  `json:"permission"`
		QueueBindCount                             int     `json:"queueBindCount"`
		QueueBindCountThresholdHighClearPercentage int     `json:"queueBindCountThresholdHighClearPercentage"`
		QueueBindCountThresholdHighPercentage      int     `json:"queueBindCountThresholdHighPercentage"`
		QueueBindTimeForwardingMode                string  `json:"queueBindTimeForwardingMode"`
		QueueCreatedByManagement                   bool    `json:"queueCreatedByManagement"`
		QueueCurrentSpoolUsageInMb                 float64 `json:"queueCurrentSpoolUsageInMb"`
		QueueDurable                               bool    `json:"queueDurable"`
		QueueEgressSelectorPresent                 bool    `json:"queueEgressSelectorPresent"`
		QueueEndptID                               int     `json:"queueEndptId"`
		QueueHighWaterMarkInMb                     float64 `json:"queueHighWaterMarkInMb"`
		QueueLowPriorityMsgCongestionState         string  `json:"queueLowPriorityMsgCongestionState"`
		QueueName                                  string  `json:"queueName"`
		QueueNetworkTopic                          string  `json:"queueNetworkTopic"`
		QueueNumMsgsSpooled                        int     `json:"queueNumMsgsSpooled"`
		QueueTopicSubscriptionCount                int     `json:"queueTopicSubscriptionCount"`
		QueueTotalAckedMsgsInProgress              int     `json:"queueTotalAckedMsgsInProgress"`
		QueueTotalDeliveredUnackedMsgs             int     `json:"queueTotalDeliveredUnackedMsgs"`
		QueueType                                  string  `json:"queueType"`
		RejectLowPriorityMsgEnabled                bool    `json:"rejectLowPriorityMsgEnabled"`
		RejectLowPriorityMsgLimit                  int     `json:"rejectLowPriorityMsgLimit"`
		RejectMsgToSenderOnDiscardBehavior         string  `json:"rejectMsgToSenderOnDiscardBehavior"`
		RespectTTLEnabled                          bool    `json:"respectTtlEnabled"`
	} `json:"data"`
	Links struct {
		FlowsURI         string `json:"flowsUri"`
		MessagesURI      string `json:"messagesUri"`
		RatesURI         string `json:"ratesUri"`
		StatsURI         string `json:"statsUri"`
		SubscriptionsURI string `json:"subscriptionsUri"`
		URI              string `json:"uri"`
	} `json:"links"`
	Meta struct {
		Request struct {
			Method string `json:"method"`
			URI    string `json:"uri"`
		} `json:"request"`
		ResponseCode int `json:"responseCode"`
	} `json:"meta"`
}

// end of XSD

// Eval implements activity.Activity.Eval
func (a *unmarshaljson) Eval(ctx activity.Context) (done bool, err error) {

	JsonString := ctx.GetInput("jsonString").(string)

	activityLog.Debugf("Json String is : [%s]", JsonString)
	//fmt.Println("Json String is : ", JsonString)

	if len(JsonString) == 0 {
		activityLog.Debugf("value in the field is empty ")
		//fmt.Println("value in  the field is empty ")

	}
	//	JsonString = (string(JsonString))
	



	json_data := AutoGenerated{}
	err = json.Unmarshal([]byte(JsonString), &json_data)

	//jsondata, _ := json.Unmarshal(json_data)
	if err != nil {
		activityLog.Debugf("Error ", err)
		fmt.Println("error: ", err)
		return
	}
	
	fmt.Println("%+v",json_data.Data.QueueBindCount)
	fmt.Println(" JSON String ********************************** ")
	log.Println("%+v",json_data.Data.QueueBindCount)

	//fmt.Println(" JSON String ")
	//fmt.Println(string(jsondata))

	// Set the output as part of the context
	activityLog.Debugf("Activity has unmarshalled json Successfully")
	fmt.Println("Activity has unmarshalled json Successfull")

	ctx.SetOutput("output", json_data.Data.QueueBindCount)

	return true, nil
}
